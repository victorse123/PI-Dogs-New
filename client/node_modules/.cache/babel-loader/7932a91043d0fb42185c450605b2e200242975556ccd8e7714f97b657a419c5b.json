{"ast":null,"code":"import { GET_ALL_BREEDS, GET_BREED_BY_NAME, GET_BREED_BY_ID, GET_TEMPS, CREATE_BREED, FILTER_BREEDS_BY_TEMP, FILTER_BREEDS_BY_SOURCE, SORT_BREEDS_BY_AZ, SORT_BREEDS_BY_WEIGHT, SET_CHOSEN_FIVE, CLEAR_FILTERS } from '../actions';\nconst initialState = {\n  breeds: [],\n  results: [],\n  invBreed: [],\n  temps: [],\n  chosenFive: [],\n  temp: null,\n  source: null,\n  keyword: null,\n  wSort: 'wu',\n  nSort: 'az'\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_BREEDS:\n      return {\n        ...state,\n        breeds: action.payload,\n        results: action.payload\n      };\n    case GET_BREED_BY_NAME:\n      return {\n        ...state,\n        results: action.payload[0],\n        keyword: action.payload[1]\n      };\n    case GET_BREED_BY_ID:\n      return {\n        ...state,\n        invBreed: action.payload\n      };\n    case GET_TEMPS:\n      return {\n        ...state,\n        temps: action.payload\n      };\n    case CREATE_BREED:\n      return {\n        ...state,\n        invBreed: action.payload\n      };\n    case FILTER_BREEDS_BY_TEMP:\n      let filteredBreeds = state.breeds;\n      if (state.keyword) filteredBreeds = filteredBreeds.filter(b => b.name.includes(state.keyword.charAt(0).toUpperCase() + state.keyword.slice(1)));\n      filteredBreeds = filteredBreeds.filter(b => {\n        if (!b.temperament) return false;\n        return b.temperament.includes(action.payload);\n      });\n      if (state.source) {\n        filteredBreeds = filteredBreeds.filter(b => {\n          if (state.source === 'DB') return b.id.toString().includes('DB');else return !b.id.toString().includes('DB');\n        });\n      }\n      return {\n        ...state,\n        results: filteredBreeds,\n        temp: action.payload\n      };\n    case FILTER_BREEDS_BY_SOURCE:\n      let filteredBreedz = state.breeds;\n      if (state.keyword) filteredBreedz = filteredBreedz.filter(b => b.name.includes(state.keyword.charAt(0).toUpperCase() + state.keyword.slice(1)));\n      filteredBreedz = filteredBreedz.filter(b => {\n        if (action.payload === 'DB') return b.id.toString().includes('DB');else return !b.id.toString().includes('DB');\n      });\n      if (state.temp) {\n        filteredBreedz = filteredBreedz.filter(b => {\n          if (!b.temperament) return false;\n          return b.temperament.includes(state.temp);\n        });\n      }\n      return {\n        ...state,\n        results: filteredBreedz,\n        source: action.payload\n      };\n    case SORT_BREEDS_BY_AZ:\n      let sortedBreeds = action.payload === 'az' ? state.results.slice().sort((a, b) => {\n        if (a.name > b.name) return 1;\n        if (a.name < b.name) return -1;\n        return 0;\n      }) : state.results.slice().sort((a, b) => {\n        if (a.name > b.name) return -1;\n        if (a.name < b.name) return 1;\n        return 0;\n      });\n      return {\n        ...state,\n        results: sortedBreeds,\n        nSort: action.payload\n      };\n    case SORT_BREEDS_BY_WEIGHT:\n      const sortedBreedz = action.payload === 'wu' ? state.results.slice().sort((a, b) => {\n        let aW = a.weight.replaceAll(\" \", \"\").split(\"-\");\n        let bW = b.weight.replaceAll(\" \", \"\").split(\"-\");\n        return bW[0] - aW[0];\n      }) : state.results.slice().sort((a, b) => {\n        let aW = a.weight.replaceAll(\" \", \"\").split(\"-\");\n        let bW = b.weight.replaceAll(\" \", \"\").split(\"-\");\n        return aW[0] - bW[0];\n      });\n      return {\n        ...state,\n        results: sortedBreedz,\n        wSort: action.payload\n      };\n    case SET_CHOSEN_FIVE:\n      return {\n        ...state,\n        chosenFive: action.payload\n      };\n    case CLEAR_FILTERS:\n      return {\n        ...state,\n        temp: null,\n        source: null,\n        keyword: null\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_BREEDS","GET_BREED_BY_NAME","GET_BREED_BY_ID","GET_TEMPS","CREATE_BREED","FILTER_BREEDS_BY_TEMP","FILTER_BREEDS_BY_SOURCE","SORT_BREEDS_BY_AZ","SORT_BREEDS_BY_WEIGHT","SET_CHOSEN_FIVE","CLEAR_FILTERS","initialState","breeds","results","invBreed","temps","chosenFive","temp","source","keyword","wSort","nSort","rootReducer","state","action","type","payload","filteredBreeds","filter","b","name","includes","charAt","toUpperCase","slice","temperament","id","toString","filteredBreedz","sortedBreeds","sort","a","sortedBreedz","aW","weight","replaceAll","split","bW"],"sources":["C:/Users/Hp/OneDrive/Escritorio/PI/PI-Dogs-main/client/src/reducers/index.js"],"sourcesContent":["import {\r\n    GET_ALL_BREEDS,\r\n    GET_BREED_BY_NAME,\r\n    GET_BREED_BY_ID,\r\n    GET_TEMPS,\r\n    CREATE_BREED,\r\n    FILTER_BREEDS_BY_TEMP,\r\n    FILTER_BREEDS_BY_SOURCE,\r\n    SORT_BREEDS_BY_AZ,\r\n    SORT_BREEDS_BY_WEIGHT,\r\n    SET_CHOSEN_FIVE,\r\n    CLEAR_FILTERS\r\n} from '../actions';\r\n\r\nconst initialState = {\r\n    breeds: [],\r\n    results: [],\r\n    invBreed: [],\r\n    temps: [],\r\n    chosenFive: [],\r\n    temp: null,\r\n    source: null,\r\n    keyword: null,\r\n    wSort: 'wu',\r\n    nSort: 'az'\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case GET_ALL_BREEDS:\r\n            return{\r\n                ...state,\r\n                breeds: action.payload,\r\n                results: action.payload\r\n            }\r\n\r\n        case GET_BREED_BY_NAME:\r\n            return{\r\n                ...state,\r\n                results: action.payload[0],\r\n                keyword: action.payload[1]\r\n            }\r\n        \r\n        case GET_BREED_BY_ID:\r\n            return{\r\n                ...state,\r\n                invBreed: action.payload\r\n            }\r\n        \r\n        case GET_TEMPS:\r\n            return{\r\n                ...state,\r\n                temps: action.payload\r\n            }\r\n        \r\n        case CREATE_BREED:\r\n            return{\r\n                ...state,\r\n                invBreed: action.payload\r\n            }\r\n        \r\n        case FILTER_BREEDS_BY_TEMP:\r\n            let filteredBreeds = state.breeds;\r\n            if (state.keyword) filteredBreeds = filteredBreeds.filter(b => b.name.includes(state.keyword.charAt(0).toUpperCase() + state.keyword.slice(1)));\r\n            filteredBreeds = filteredBreeds.filter(b => {\r\n                if (!b.temperament) return false;\r\n                return b.temperament.includes(action.payload)\r\n            });\r\n            if (state.source) {\r\n                filteredBreeds = filteredBreeds.filter(b =>{\r\n                    if (state.source === 'DB') return b.id.toString().includes('DB');\r\n                    else return !b.id.toString().includes('DB');\r\n                });\r\n            }\r\n            return{\r\n                ...state,\r\n                results: filteredBreeds,\r\n                temp: action.payload\r\n            }\r\n\r\n        case FILTER_BREEDS_BY_SOURCE:\r\n            let filteredBreedz = state.breeds;\r\n            if (state.keyword) filteredBreedz = filteredBreedz.filter(b => b.name.includes(state.keyword.charAt(0).toUpperCase() + state.keyword.slice(1)));\r\n            filteredBreedz = filteredBreedz.filter(b => {\r\n                if (action.payload === 'DB') return b.id.toString().includes('DB');\r\n                else return !b.id.toString().includes('DB');\r\n            });\r\n            if (state.temp) {\r\n                filteredBreedz = filteredBreedz.filter(b =>{\r\n                    if (!b.temperament) return false;\r\n                    return b.temperament.includes(state.temp)\r\n                });\r\n            }\r\n            return{\r\n                ...state,\r\n                results: filteredBreedz,\r\n                source: action.payload\r\n            }\r\n\r\n        case SORT_BREEDS_BY_AZ:\r\n            let sortedBreeds = action.payload === 'az' ?\r\n                state.results.slice().sort((a, b) =>{\r\n                    if (a.name > b.name) return 1;\r\n                    if (a.name < b.name) return -1;\r\n                    return 0;\r\n                }):\r\n                state.results.slice().sort((a, b) =>{\r\n                    if (a.name > b.name) return -1;\r\n                    if (a.name < b.name) return 1;\r\n                    return 0;\r\n                });\r\n            return{\r\n                ...state,\r\n                results: sortedBreeds,\r\n                nSort: action.payload\r\n            }\r\n        \r\n        case SORT_BREEDS_BY_WEIGHT:\r\n            const sortedBreedz = action.payload === 'wu' ?\r\n                state.results.slice().sort((a, b) =>{\r\n                    let aW = a.weight.replaceAll(\" \", \"\").split(\"-\");\r\n                    let bW = b.weight.replaceAll(\" \", \"\").split(\"-\");\r\n                    return bW[0] - aW[0];\r\n                }):\r\n                state.results.slice().sort((a, b) =>{\r\n                    let aW = a.weight.replaceAll(\" \", \"\").split(\"-\");\r\n                    let bW = b.weight.replaceAll(\" \", \"\").split(\"-\");\r\n                    return aW[0] - bW[0];\r\n                });\r\n            return{\r\n                ...state,\r\n                results: sortedBreedz,\r\n                wSort: action.payload\r\n            }\r\n\r\n        case SET_CHOSEN_FIVE:\r\n            return{\r\n                ...state,\r\n                chosenFive: action.payload\r\n            }\r\n        \r\n        case CLEAR_FILTERS:\r\n            return{\r\n                ...state,\r\n                temp: null,\r\n                source: null,\r\n                keyword: null\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}