{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Escritorio\\\\PI Dogs\\\\PI Dogs\\\\client\\\\src\\\\components\\\\home\\\\Pagination\\\\Pagination.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Pagination.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pagination({\n  dogsPerPage,\n  totalPosts,\n  paginate,\n  currentPage,\n  setCurrentPage\n}) {\n  _s();\n  const [pageNumberLimit /*  setPageNumberLimit */] = useState(5);\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\n\n  // console.log(currentPage)\n  // console.log(setCurrentPage)\n\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalPosts / dogsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  function handleNext() {\n    if (currentPage !== pageNumbers.length) {\n      setCurrentPage(currentPage + 1);\n    }\n    if (currentPage + 1 > maxPageNumberLimit) {\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\n    }\n  }\n  function handlePrev() {\n    if (currentPage !== 1) {\n      setCurrentPage(currentPage - 1);\n      if ((currentPage - 1) % pageNumberLimit === 0) {\n        setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\n        setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination_component\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page\",\n        onClick: handlePrev,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), pageNumbers && pageNumbers.map((page, i) => {\n        if (page < maxPageNumberLimit + 1 && page > minPageNumberLimit) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"pagination_item\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: currentPage === page ? \"page active\" : \"page\",\n              onClick: () => paginate(page),\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        } else {\n          return null;\n        }\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"page\",\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Pagination, \"i4BAWmmXxneIzKggoUV/aZCfcgU=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Pagination","dogsPerPage","totalPosts","paginate","currentPage","setCurrentPage","_s","pageNumberLimit","maxPageNumberLimit","setMaxPageNumberLimit","minPageNumberLimit","setMinPageNumberLimit","pageNumbers","i","Math","ceil","push","handleNext","length","handlePrev","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","page","_c","$RefreshReg$"],"sources":["C:/Users/Hp/OneDrive/Escritorio/PI Dogs/PI Dogs/client/src/components/home/Pagination/Pagination.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./Pagination.module.css\";\r\n\r\nfunction Pagination({dogsPerPage, totalPosts, paginate, currentPage, setCurrentPage}) {\r\n\r\n  const [pageNumberLimit,/*  setPageNumberLimit */] = useState(5);\r\n  const [maxPageNumberLimit, setMaxPageNumberLimit] = useState(5);\r\n  const [minPageNumberLimit, setMinPageNumberLimit] = useState(0);\r\n\r\n  // console.log(currentPage)\r\n  // console.log(setCurrentPage)\r\n  \r\n  const pageNumbers = [];\r\n\r\n  for(let i = 1; i <= Math.ceil(totalPosts / dogsPerPage); i++) {\r\n    pageNumbers.push(i)\r\n  }\r\n\r\n  function handleNext() {\r\n    if(currentPage !== pageNumbers.length){\r\n      setCurrentPage(currentPage + 1)\r\n    }\r\n\r\n    if(currentPage + 1 >maxPageNumberLimit) {\r\n      setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n      setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n    }\r\n  }\r\n\r\n  function handlePrev() {\r\n    if(currentPage !== 1) {\r\n      setCurrentPage(currentPage - 1)\r\n\r\n      if((currentPage - 1) % pageNumberLimit === 0) {\r\n        setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"pagination_component\">\r\n      <ul className=\"pagination\">\r\n        <button className=\"page\" onClick={handlePrev}>Prev</button>\r\n        {pageNumbers && pageNumbers.map((page, i) => {\r\n          if(page < maxPageNumberLimit+1 && page > minPageNumberLimit) {\r\n            return(\r\n              <li key={i} className=\"pagination_item\">\r\n                <span className={currentPage === page ? \"page active\" : \"page\"} onClick={() => paginate(page)}>{page}</span>\r\n              </li>\r\n            )\r\n          } else {\r\n            return null\r\n          }\r\n        })}\r\n        <button className=\"page\" onClick={handleNext}>Next</button>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}