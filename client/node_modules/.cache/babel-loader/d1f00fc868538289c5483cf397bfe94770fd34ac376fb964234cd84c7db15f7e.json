{"ast":null,"code":"/* eslint-disable no-unreachable */\nimport axios from 'axios';\nexport const GET_ALL_BREEDS = 'GET_ALL_BREEDS';\nexport const GET_BREED_BY_NAME = 'GET_BREED_BY_NAME';\nexport const GET_BREED_BY_ID = 'GET_BREED_BY_ID';\nexport const GET_TEMPS = 'GET_TEMPS';\nexport const CREATE_BREED = 'CREATE_BREED';\nexport const FILTER_BREEDS_BY_TEMP = 'FILTER_BREEDS_BY_TEMP';\nexport const FILTER_BREEDS_BY_SOURCE = 'FILTER_BREEDS_BY_SOURCE';\nexport const SORT_BREEDS_BY_AZ = 'SORT_BREEDS_BY_AZ';\nexport const SORT_BREEDS_BY_WEIGHT = 'SORT_BREEDS_BY_WEIGHT';\nexport const SET_CHOSEN_FIVE = 'SET_CHOSEN_FIVE';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\n\n//CHENGE TO REAL SERVER FOR PRODUCTION\nconst SERVER_URL = 'http://localhost:3001';\nexport const getAllBreeds = () => {\n  try {\n    return async dispatch => {\n      let {\n        data\n      } = await axios.get(`${SERVER_URL}/dogs`);\n      // console.log(data);\n      return dispatch({\n        type: GET_ALL_BREEDS,\n        payload: data\n      });\n    };\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getBreedByName = name => {\n  try {\n    return async dispatch => {\n      var {\n        data\n      } = await axios.get(`${SERVER_URL}/dogs?breed=${name}`);\n      return dispatch({\n        type: GET_BREED_BY_NAME,\n        payload: [data, name]\n      });\n    };\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getBreedById = id => {\n  try {\n    return async dispatch => {\n      var result = await axios.get(`${SERVER_URL}/dogs/${id}`);\n      //console.log(result);\n      return dispatch({\n        type: GET_BREED_BY_ID,\n        payload: result.data\n      });\n    };\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getTemps = () => {\n  try {\n    return async dispatch => {\n      var result = await axios.get(`${SERVER_URL}/temperament`);\n      //console.log(result);\n      return dispatch({\n        type: GET_TEMPS,\n        payload: result.data\n      });\n    };\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const createBreed = payload => {\n  const breedPackage = {\n    name: payload.name,\n    height_min: payload.minHeight,\n    height_max: payload.maxHeight,\n    weight_min: payload.minWeight,\n    weight_max: payload.maxWeight,\n    lifespan_min: payload.minLifeSpan,\n    lifespan_max: payload.maxLifeSpan,\n    imgUrl: payload.imgUrl,\n    temperament: payload.temperament\n  };\n  try {\n    return async dispatch => {\n      var {\n        data\n      } = await axios.post(`${SERVER_URL}/dog`, breedPackage);\n      return dispatch({\n        type: CREATE_BREED,\n        payload: data\n      });\n    };\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n//payload = temperament name string\nexport const filterBreedsByTemp = payload => {\n  return dispatch => {\n    return dispatch({\n      type: FILTER_BREEDS_BY_TEMP,\n      payload\n    });\n  };\n};\n\n//payload = resource = 'DB' or 'API'\nexport const filterBreedsBySource = payload => {\n  return dispatch => {\n    return dispatch({\n      type: FILTER_BREEDS_BY_SOURCE,\n      payload\n    });\n  };\n};\nexport const clearFilters = payload => {\n  return dispatch => {\n    return dispatch({\n      type: CLEAR_FILTERS,\n      payload\n    });\n  };\n};\n\n//payload = 'az' or 'za'\nexport const sortBreedsByAz = payload => {\n  return dispatch => {\n    return dispatch({\n      type: SORT_BREEDS_BY_AZ,\n      payload\n    });\n  };\n};\n\n//payload = 'wu' or 'wd'\nexport const sortBreedsByWeight = payload => {\n  return dispatch => {\n    return dispatch({\n      type: SORT_BREEDS_BY_WEIGHT,\n      payload\n    });\n  };\n};\nexport const setChosenFive = payload => {\n  return {\n    type: SET_CHOSEN_FIVE,\n    payload\n  };\n};","map":{"version":3,"names":["axios","GET_ALL_BREEDS","GET_BREED_BY_NAME","GET_BREED_BY_ID","GET_TEMPS","CREATE_BREED","FILTER_BREEDS_BY_TEMP","FILTER_BREEDS_BY_SOURCE","SORT_BREEDS_BY_AZ","SORT_BREEDS_BY_WEIGHT","SET_CHOSEN_FIVE","CLEAR_FILTERS","SERVER_URL","getAllBreeds","dispatch","data","get","type","payload","e","console","log","getBreedByName","name","getBreedById","id","result","getTemps","createBreed","breedPackage","height_min","minHeight","height_max","maxHeight","weight_min","minWeight","weight_max","maxWeight","lifespan_min","minLifeSpan","lifespan_max","maxLifeSpan","imgUrl","temperament","post","filterBreedsByTemp","filterBreedsBySource","clearFilters","sortBreedsByAz","sortBreedsByWeight","setChosenFive"],"sources":["C:/Users/Hp/OneDrive/Escritorio/PI/PI-Dogs-main/client/src/actions/index.js"],"sourcesContent":["/* eslint-disable no-unreachable */\r\nimport axios from 'axios'\r\nexport const GET_ALL_BREEDS = 'GET_ALL_BREEDS';\r\nexport const GET_BREED_BY_NAME = 'GET_BREED_BY_NAME';\r\nexport const GET_BREED_BY_ID = 'GET_BREED_BY_ID';\r\nexport const GET_TEMPS = 'GET_TEMPS';\r\nexport const CREATE_BREED = 'CREATE_BREED';\r\nexport const FILTER_BREEDS_BY_TEMP = 'FILTER_BREEDS_BY_TEMP';\r\nexport const FILTER_BREEDS_BY_SOURCE = 'FILTER_BREEDS_BY_SOURCE';\r\nexport const SORT_BREEDS_BY_AZ = 'SORT_BREEDS_BY_AZ';\r\nexport const SORT_BREEDS_BY_WEIGHT = 'SORT_BREEDS_BY_WEIGHT';\r\nexport const SET_CHOSEN_FIVE = 'SET_CHOSEN_FIVE';\r\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\r\n\r\n//CHENGE TO REAL SERVER FOR PRODUCTION\r\nconst SERVER_URL = 'http://localhost:3001';\r\n\r\nexport const getAllBreeds = () =>{\r\n    try {\r\n        return async dispatch =>{\r\n            let { data } = await axios.get(`${SERVER_URL}/dogs`);\r\n            // console.log(data);\r\n            return dispatch({\r\n                type: GET_ALL_BREEDS,\r\n                payload: data \r\n            });\r\n        }\r\n    } catch (e) { console.log(e); }\r\n}\r\n\r\nexport const getBreedByName = name =>{\r\n    try {\r\n        return async dispatch =>{\r\n            var { data } = await axios.get(`${SERVER_URL}/dogs?breed=${name}`);\r\n            return dispatch({\r\n                type: GET_BREED_BY_NAME,\r\n                payload: [data, name] \r\n            });\r\n        }\r\n    } catch (e) { console.log(e); }\r\n}\r\n\r\nexport const getBreedById = id =>{\r\n    try {\r\n        return async dispatch =>{\r\n            var result = await axios.get(`${SERVER_URL}/dogs/${id}`);\r\n            //console.log(result);\r\n            return dispatch({\r\n                type: GET_BREED_BY_ID,\r\n                payload: result.data \r\n            });\r\n        }\r\n    } catch (e) { console.log(e); }\r\n}\r\n\r\nexport const getTemps = () =>{\r\n    try {\r\n        return async dispatch =>{\r\n            var result = await axios.get(`${SERVER_URL}/temperament`);\r\n            //console.log(result);\r\n            return dispatch({\r\n                type: GET_TEMPS,\r\n                payload: result.data \r\n            });\r\n        }\r\n    } catch (e) { console.log(e); }\r\n}\r\n\r\nexport const createBreed = payload =>{\r\n    const breedPackage = {\r\n        name: payload.name,\r\n        height_min: payload.minHeight,\r\n        height_max: payload.maxHeight,\r\n        weight_min: payload.minWeight,\r\n        weight_max: payload.maxWeight,\r\n        lifespan_min: payload.minLifeSpan,\r\n        lifespan_max: payload.maxLifeSpan,\r\n        imgUrl: payload.imgUrl,\r\n        temperament: payload.temperament,\r\n    }\r\n    try {\r\n        return async dispatch =>{\r\n            var { data } = await axios.post(`${SERVER_URL}/dog`, breedPackage);\r\n            return dispatch({\r\n                type: CREATE_BREED,\r\n                payload: data \r\n            });\r\n        }\r\n    } catch (e) { console.log(e); }\r\n}\r\n\r\n//payload = temperament name string\r\nexport const filterBreedsByTemp = payload =>{\r\n    return dispatch =>{\r\n        return dispatch({\r\n            type: FILTER_BREEDS_BY_TEMP,\r\n            payload\r\n        });\r\n    }\r\n}\r\n\r\n//payload = resource = 'DB' or 'API'\r\nexport const filterBreedsBySource = payload =>{\r\n    return dispatch =>{\r\n        return dispatch({\r\n            type: FILTER_BREEDS_BY_SOURCE,\r\n            payload\r\n        });\r\n    }\r\n}\r\n\r\nexport const clearFilters = payload =>{\r\n    return dispatch =>{\r\n        return dispatch({\r\n            type: CLEAR_FILTERS,\r\n            payload\r\n        });\r\n    }\r\n}\r\n\r\n//payload = 'az' or 'za'\r\nexport const sortBreedsByAz = payload =>{\r\n    return dispatch =>{\r\n        return dispatch({\r\n            type: SORT_BREEDS_BY_AZ,\r\n            payload\r\n        })\r\n    }\r\n}\r\n\r\n//payload = 'wu' or 'wd'\r\nexport const sortBreedsByWeight = payload =>{\r\n    return dispatch =>{\r\n        return dispatch({\r\n            type: SORT_BREEDS_BY_WEIGHT,\r\n            payload\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const setChosenFive = payload =>{\r\n    return {\r\n        type: SET_CHOSEN_FIVE,\r\n        payload\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}